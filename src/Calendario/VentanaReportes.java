/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Calendario;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;



/**
 *
 * @author MARLON
 */
public class VentanaReportes extends javax.swing.JFrame {

    /**
     * Creates new form VentanaReportes
     */
    public VentanaReportes() {
        initComponents();
        llenarFechas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel = new javax.swing.JLabel();
        JButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEventos = new javax.swing.JTable();
        btnGenerarReporte = new javax.swing.JButton();
        cmbAnio = new javax.swing.JComboBox<>();
        cmbMes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cmbDia = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnGenerarReporteMes = new javax.swing.JButton();
        btnR2Grafico = new javax.swing.JButton();
        cmbAnioR2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cmbMesR2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnR1Grafico = new javax.swing.JButton();
        JButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel.setText("Elija el año");

        JButton.setText("Buscar por dia/mes/año");
        JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonActionPerformed(evt);
            }
        });

        tablaEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Title", "Description", "Date", "Time"
            }
        ));
        jScrollPane1.setViewportView(tablaEventos);

        btnGenerarReporte.setText("Generar Reporte");
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarReporteActionPerformed(evt);
            }
        });

        cmbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMesActionPerformed(evt);
            }
        });

        jLabel1.setText("Elija el dia:");

        cmbDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDiaActionPerformed(evt);
            }
        });

        jLabel2.setText("Elija el mes");

        jLabel3.setText("Especifica tu reporte normal");

        jLabel4.setText("Especifica tu Reporte Grafico");

        btnGenerarReporteMes.setText("Generar Reporte");
        btnGenerarReporteMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarReporteMesActionPerformed(evt);
            }
        });

        btnR2Grafico.setText("Reporte Grafico");
        btnR2Grafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnR2GraficoActionPerformed(evt);
            }
        });

        jLabel5.setText("Elija el año");

        cmbMesR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMesR2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Elija el mes");

        btnR1Grafico.setText("Reporte Grafico");
        btnR1Grafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnR1GraficoActionPerformed(evt);
            }
        });

        JButton1.setText("Buscar por mes/año");
        JButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbAnio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbMes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbDia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(cmbMesR2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(cmbAnioR2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(33, 33, 33)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(3, 3, 3)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGenerarReporteMes)
                                        .addGap(4, 4, 4)
                                        .addComponent(btnR2Grafico, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnGenerarReporte)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnR1Grafico, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(JButton)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(JButton1)
                        .addGap(64, 64, 64)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(cmbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerarReporte)
                    .addComponent(btnR1Grafico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbAnioR2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(cmbMesR2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerarReporteMes)
                    .addComponent(btnR2Grafico))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void llenarFechas() {
        // Para los nuevos comboBox de reporte por mes
for (int i = 2023; i <= 2030; i++) {
    cmbAnioR2.addItem(String.valueOf(i));
}

for (int i = 1; i <= 12; i++) {
    cmbMesR2.addItem(String.format("%02d", i));
}

for (int i = 2023; i <= 2030; i++) {
        cmbAnio.addItem(String.format("%02d", i));
    }

    for (int i = 1; i <= 12; i++) {
        cmbMes.addItem(String.format("%02d", i));
    }

    for (int i = 1; i <= 31; i++) {
        cmbDia.addItem(String.format("%02d", i));
    }
}

    private void JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonActionPerformed
        buscarPorFecha();
        // TODO add your handling code here:
    }//GEN-LAST:event_JButtonActionPerformed

    private void btnGenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarReporteActionPerformed
        try {
            String dia = cmbDia.getSelectedItem().toString();
String mes = cmbMes.getSelectedItem().toString();
String anio = cmbAnio.getSelectedItem().toString();
String fechaStr = anio + "-" + mes + "-" + dia;


            if (fechaStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor ingrese una fecha en formato YYYY-MM-DD.");
                return;
            }

            // Convertir fecha
            java.sql.Date fecha = java.sql.Date.valueOf(fechaStr);

            // Parámetros
            Map<String, Object> parametros = new HashMap<>();
            parametros.put("Date", fecha); // este debe coincidir con el nombre del parámetro en tu jrxml
            mostrarReporte("src/Reportes/ReporteDiaMes.jasper", parametros);
            /*
            // Cargar reporte
            JasperReport reporte = JasperCompileManager.compileReport("JasperReport reporte = JasperCompileManager.compileReport(\"C:/Users/MARLON/Documents/NetBeansProjects/AntesPruebita/CALENDARIO_VISUAL/Reportes/ReporteFechas.jrxml\");");

            // Conexión usando tu clase
            Connection conn = DatabaseCompleto.getConnection();

            // Rellenar y mostrar
            JasperPrint print = JasperFillManager.fillReport(reporte, parametros, conn);
            JasperViewer.viewReport(print, false);
*/
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al generar el reporte: " + ex.getMessage());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerarReporteActionPerformed

    private void cmbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMesActionPerformed

    private void cmbDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDiaActionPerformed

    private void btnGenerarReporteMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarReporteMesActionPerformed

        // TODO add your handling code here:
        try {
        // Obtener datos desde los nuevos comboBox
        String mes = cmbMesR2.getSelectedItem().toString();
        String anio = cmbAnioR2.getSelectedItem().toString();

        if (mes.isEmpty() || anio.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un mes y año.");
            return;
        }

        // Convertir a números si es necesario
        int mesNum = Integer.parseInt(mes);
        int anioNum = Integer.parseInt(anio);

        // Parámetros para el reporte
        Map<String, Object> parametros = new HashMap<>();
        parametros.put("Mes", mesNum);
        parametros.put("Anio", anioNum);

        // Ruta del reporte (ajústala si es diferente)
        mostrarReporte("src/Reportes/ReporteMes.jasper", parametros);

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al generar el reporte por mes: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnGenerarReporteMesActionPerformed

    private void btnR2GraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnR2GraficoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnR2GraficoActionPerformed

    private void cmbMesR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMesR2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMesR2ActionPerformed

    private void btnR1GraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnR1GraficoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnR1GraficoActionPerformed

    private void JButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButton1ActionPerformed
buscarPorMes();        // TODO add your handling code here:
    }//GEN-LAST:event_JButton1ActionPerformed
    private void buscarPorFecha() {
            String dia = cmbDia.getSelectedItem().toString();
    String mes = cmbMes.getSelectedItem().toString();
    String anio = cmbAnio.getSelectedItem().toString();
    String fechaTexto = anio + "-" + mes + "-" + dia;

        if (fechaTexto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese una fecha en formato YYYY-MM-DD.");
            return;
        }

        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/calendar", "root", "64470308")) {
            String sql = "SELECT * FROM calendar WHERE Date = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setDate(1, java.sql.Date.valueOf(fechaTexto));
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tablaEventos.getModel();
            model.setRowCount(0); // Limpiar tabla

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("ID"),
                    rs.getString("Title"),
                    rs.getString("Description"),
                    rs.getDate("Date"),
                    rs.getTime("Time")
                });
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al buscar eventos.");
        }
    }
    private void buscarPorMes() {
    String mes = cmbMesR2.getSelectedItem().toString();
    String anio = cmbAnioR2.getSelectedItem().toString();

    if (mes.isEmpty() || anio.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Seleccione un mes y un año válidos.");
        return;
    }

    try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/calendar", "root", "64470308")) {
        String sql = "SELECT * FROM calendar WHERE MONTH(Date) = ? AND YEAR(Date) = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setInt(1, Integer.parseInt(mes));
        stmt.setInt(2, Integer.parseInt(anio));
        ResultSet rs = stmt.executeQuery();

        DefaultTableModel model = (DefaultTableModel) tablaEventos.getModel();
        model.setRowCount(0); // Limpiar tabla

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("ID"),
                rs.getString("Title"),
                rs.getString("Description"),
                rs.getDate("Date"),
                rs.getTime("Time")
            });
        }

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al buscar eventos por mes.");
    }
}


    public void mostrarReporte(String rutaRelativa, Map<String, Object> parametros) {
        try {
            File file = new File(rutaRelativa);
            if (!file.exists()) {
                JOptionPane.showMessageDialog(null, "❌ Reporte no encontrado:\n" + file.getAbsolutePath());
                return;
            }

            try (InputStream input = new FileInputStream(file); Connection conn = DatabaseCompleto.getConnection()) {

                JasperReport reporte = (JasperReport) JRLoader.loadObject(input);
                JasperPrint print = JasperFillManager.fillReport(reporte, parametros, conn);

                if (print.getPages().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "El reporte no contiene información para los criterios seleccionados.", "Reporte vacío", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JasperViewer.viewReport(print, false);
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "❌ Error al generar el reporte:\n" + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaReportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButton;
    private javax.swing.JButton JButton1;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnGenerarReporteMes;
    private javax.swing.JButton btnR1Grafico;
    private javax.swing.JButton btnR2Grafico;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbAnio;
    private javax.swing.JComboBox<String> cmbAnioR2;
    private javax.swing.JComboBox<String> cmbDia;
    private javax.swing.JComboBox<String> cmbMes;
    private javax.swing.JComboBox<String> cmbMesR2;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEventos;
    // End of variables declaration//GEN-END:variables
}
